knitr::opts_chunk$set(echo = TRUE,
fig.height = 4, dev = 'jpeg')
setwd("D:/Github/basesuffs/basesaude")
library(read.dbc)
library(microdatasus)
library(readr)
library(readxl)
library(dplyr)
library(stringr)
library(leaflet)
# Extraindo a base CNES leitos
leitos.cnes <- fetch_datasus(year_start = 2020, month_start = 8,
year_end = 2020, month_end = 8,
uf = "RS",
information_system = "CNES-LT")
equip.cnes <- fetch_datasus(year_start = 2020, month_start = 8,
year_end = 2020, month_end = 8,
uf = "RS",
information_system = "CNES-EQ")
estab.cnes <- fetch_datasus(year_start = 2020, month_start = 8,
year_end = 2020, month_end = 8,
uf = "RS",
information_system = "CNES-ST")
# Pasta TAB_DBF
library(foreign)
x.gestao <- read.dbf("TAB_CNES/TAB_DBF/GESTAO.dbf")
x.gestao <- read.dbf("TAB_CNES/TAB_DBF/GESTAO.dbf")
x.equipe <- read.dbf("TAB_CNES/TAB_DBF/EQUIPE.dbf")
x.eqp_rs <- read.dbf("TAB_CNES/TAB_DBF/EQP_RS.dbf")
x.hospital = read.dbf("TAB_CNES/TAB_DBF/CADGERRS.dbf")
x.hospital = read.dbf("TAB_CNES/TAB_DBF/CADGERRS.dbf")
# x.tpestab <- read_delim("TAB_CNES/TAB_DBF/TP_ESTAB.csv", ";", escape_double = FALSE, trim_ws = TRUE)
library(readxl)
x.tpestab <- as.data.frame(read_excel("TAB_CNES/TAB_DBF/TP_ESTAB.xls"))
names(x.tpestab)[1] = "estab"
names(x.tpestab)[2] = "tp_unid"
x.tpestab$tp_unid = as.factor(x.tpestab$tp_unid)
# Transformando para minúscula os nomes de variáveis
names(leitos.cnes) = tolower(names(leitos.cnes))
names(equip.cnes) = tolower(names(equip.cnes))
names(estab.cnes) = tolower(names(estab.cnes))
names(x.gestao) = tolower(names(x.gestao))
names(x.equipe) = tolower(names(x.equipe))
names(x.eqp_rs) = tolower(names(x.eqp_rs))
names(x.hospital) = tolower(names(x.hospital))
# Pasta BASE_DE_DADOS_CNES_202009
x.leito = data.frame(read_delim("BASE_DE_DADOS_CNES_202009/tbLeito202009.csv",
";", escape_double = FALSE, col_types = cols(TIPEQUIP = col_factor(), CODEQUIP = col_factor()),locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
# Pasta BASE_DE_DADOS_CNES_202009
x.leito = data.frame(read_delim("BASE_DE_DADOS_CNES_202009/tbLeito202009.csv",
";", escape_double = FALSE, col_types = cols(TIPEQUIP = col_factor(), CODEQUIP = col_factor()),locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
# Pasta doc
x.equip = data.frame(read_delim("doc/equip.csv",
";", escape_double = FALSE, col_types = cols(TIPEQUIP = col_factor(), CODEQUIP = col_factor()),locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
x.reg.saude <- data.frame(read_delim("doc/reg_saude_mun.csv", ";",locale = locale(encoding = "ISO-8859-1")))
x.hosp = data.frame(read_csv("doc/CADGERRS.csv",locale = locale(encoding = "ISO-8859-1")))
x.hosp = data.frame(read_csv("doc/CADGERRS.csv",locale = locale(encoding = "ISO-8859-1")))
# PASTA "Tab_CMD"
x.codleito = data.frame(read_delim("doc/CODLEITO.csv",
";", escape_double = FALSE, col_types = cols(CODLEITO = col_double()),locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE))
x.coredes = data.frame(read_delim("doc/coredes.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
# PASTA "Tab_CMD"
x.codleito = data.frame(read_delim("doc/CODLEITO.csv",
";", escape_double = FALSE, col_types = cols(CODLEITO = col_double()),locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE))
x.coredes = data.frame(read_delim("doc/coredes.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
x.coredes$codufmun=substr(x.coredes$CODUFMUN,1,6)
x.coredes$codufmun=substr(x.coredes$CODUFMUN,1,6)
x.coredes$corede = as.factor(x.coredes$COREDE)
x.coredes = data.frame(read_delim("doc/coredes.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"), trim_ws = TRUE))
x.coredes$codufmun=substr(x.coredes$CODUFMUN,1,6)
x.coredes$corede = as.factor(x.coredes$COREDE)
x.rf =  data.frame(read_delim("doc/rf.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1")))
x.pop <- data.frame(na.omit(read_delim("doc/populacao.csv", ";", skip = 3,locale = locale(encoding = "ISO-8859-1"))))
x.pop$CODUFMUN = as.factor(x.pop$CODUFMUN)
x.pop = tidyr::gather(x.pop, "ANO","POPULACAO", 3:30)
x.pop$ANO = as.factor(substr(x.pop$ANO,2,5))
x.pop = x.pop %>% filter(ANO == 2019)
x.pop$POPULACAO = as.numeric(x.pop$POPULACAO)
# Transformando para minúscula os nomes de variáveis
names(x.equip) = tolower(names(x.equip))
names(x.reg.saude) = tolower(names(x.reg.saude))
names(x.hosp) = tolower(names(x.hosp))
names(x.codleito) = tolower(names(x.codleito))
names(x.coredes) = tolower(names(x.coredes))
names(x.rf) = tolower(names(x.rf))
names(x.leito) = tolower(names(x.leito))
names(x.pop) = tolower(names(x.pop))
variables_names <- names(leitos.cnes)
if("tpgestao" %in% variables_names){
leitos.cnes$tpgestao <- as.character(levels(leitos.cnes$tpgestao))[leitos.cnes$tpgestao]
leitos.cnes$tpgestao[leitos.cnes$tpgestao=="D"] <- "DUPLA"
leitos.cnes$tpgestao[leitos.cnes$tpgestao=="E"] <- "ESTADUAL"
leitos.cnes$tpgestao[leitos.cnes$tpgestao=="M"] <- "MUNICIPAL"
leitos.cnes$tpgestao[leitos.cnes$tpgestao=="Z"] <- "SEM GESTAO"
leitos.cnes$tpgestao[leitos.cnes$tpgestao=="S"] <- "SEM GESTAO"
leitos.cnes$tpgestao <- factor(leitos.cnes$tpgestao)
}
if("tp_leito" %in% variables_names){
leitos.cnes$tp_leito <- as.character(levels(leitos.cnes$tp_leito))[leitos.cnes$tp_leito]
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="1"] <- "CIRURGICO"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="2"] <- "CLINICO"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="3"] <- "OBSTETRICOS"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="4"] <- "PEDIATRICOS"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="5"] <- "OUTRAS ESPECIALIDADES"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="6"] <- "HOSPITAL DIA"
leitos.cnes$tp_leito[leitos.cnes$tp_leito=="7"] <- "COMPLEMENTAR"
leitos.cnes$tp_leito <- factor(leitos.cnes$tp_leito)
}
colnames(leitos.cnes)[23] = "qtexist"
colnames(leitos.cnes)[24] = "qtcontr"
colnames(leitos.cnes)[25] = "qtsus"
colnames(leitos.cnes)[26] = "qtnsus"
```{r, include=FALSE}
# Fatorização
to.factors <- function(df, variables){
for (variable in variables){
df[[variable]] <- as.factor(df[[variable]])
}
return(df)
}
# Número
to.numeric <- function(df, variables){
for (variable in variables){
df[[variable]] <- as.numeric(df[[variable]])
}
return(df)
}
# Data
library(lubridate)
to.date <- function(df, variables){
for (variable in variables){
df[[variable]] <- dmy(df[[variable]])
}
return(df)
}
leitos.cnes$ano = substr(leitos.cnes$competen,1,4)
leitos.cnes$mes = substr(leitos.cnes$competen,5,6)
x.coredes$codufmun = as.factor(substr(x.coredes$codufmun,1,6))
## Codificando a base
leitos.cnes$id = paste(leitos.cnes$ano,leitos.cnes$codufmun)
leitos.cnes$municipio = x.coredes[match(as.factor(leitos.cnes$codufmun), as.factor(x.coredes$codufmun)),"municipio"]
leitos.cnes$corede = x.coredes[match(as.factor(leitos.cnes$codufmun), as.factor(x.coredes$codufmun)),"corede"]
knitr::opts_chunk$set(echo = TRUE,
fig.height = 4, dev = 'jpeg')
# Pasta TAB_DBF
library(foreign)
x.gestao <- read.dbf("~TAB_CNES/TAB_DBF/GESTAO.dbf")
x.gestao <- read.dbf(system.file("~TAB_CNES/TAB_DBF/GESTAO.dbf"))
